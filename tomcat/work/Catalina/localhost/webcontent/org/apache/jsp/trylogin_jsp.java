/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.65
 * Generated at: 2021-04-19 11:49:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class trylogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      com.acring.pojo.Student student = null;
      student = (com.acring.pojo.Student) _jspx_page_context.getAttribute("student", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (student == null){
        student = new com.acring.pojo.Student();
        _jspx_page_context.setAttribute("student", student, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta charset=\"UTF-8\">\r\n");
      out.write("\t<title>登录页面</title>\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"./materialize/css/materialize.min.css\">\r\n");
      out.write("\t<script src=\"https://cdn.bootcss.com/jquery/3.2.1/jquery.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"./materialize/js/materialize.min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\tfunction focusonId(){\r\n");
      out.write("\t\t\tfrm.uid.focus();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<style type=\"text/css\">\r\n");
      out.write("\thtml{\r\n");
      out.write("\t\theight: 100%\r\n");
      out.write("\t}\r\n");
      out.write("body { \r\n");
      out.write("background:url(./wallpaper2.jpg) no-repeat;\r\n");
      out.write("\r\n");
      out.write("background-size:100% 100%;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".content {\r\n");
      out.write("    z-index: 1;\r\n");
      out.write("}\r\n");
      out.write(".content:after {\r\n");
      out.write("    content: '';\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    top: 0;\r\n");
      out.write("    left: 0;\r\n");
      out.write("    right: 0;\r\n");
      out.write("    bottom: 0;\r\n");
      out.write("    background-color: rgba(255,255,255,0.8);\r\n");
      out.write("    z-index: -1;\r\n");
      out.write("    -webkit-filter: blur(2px);\r\n");
      out.write("    -moz-filter: blur(2px);\r\n");
      out.write("    -ms-filter: blur(2px);\r\n");
      out.write("    -o-filter: blur(2px);\r\n");
      out.write("    filter: blur(2px);  \r\n");
      out.write("}\r\n");
      out.write("\t</style>\r\n");
      out.write("</head>\r\n");

	if(student.getId() == null){
	student.setId("");
	if(student.getPassword() == null){
	student.setPassword("");
}
}


      out.write("\r\n");
      out.write("<body onLoad=\"focusonId()\">\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<h2 class=\"center-align\">登录页面</h2>\r\n");
      out.write("\t\t<div class=\"row \">\r\n");
      out.write("\t\t\t <form id=\"frm\" class=\"content z-depth-5 card-panel col s6 offset-s3\" style=\"margin-top: 50px\" action=\"login.jsp\" method=\"post\" onsubmit=\"return validate_form(this)\">\r\n");
      out.write("\t\t\t \t<div class=\"row\">\r\n");
      out.write("\t\t\t\t \t<div class=\"input-field col s6 offset-s3\">\r\n");
      out.write("\t\t\t\t \t\t");


				 		if(student.errorCode == 101){ // 学号有错误
				 		
      out.write("\r\n");
      out.write("\t\t\t\t \t\t<input id=\"uid\" type=\"text\" name=\"id\" class=\"validate invalid\" value=");
      out.print(student.getId());
      out.write(">\r\n");
      out.write("\t\t\t\t \t\t<label for=\"uid\" data-error=\"10位数字\">学号</label>\r\n");
      out.write("\t\t\t\t \t\t");

				 		}
				 		else if(student.errorCode == 201){
				 		
      out.write("\r\n");
      out.write("\t\t\t\t \t\t<input id=\"uid\" type=\"text\" name=\"id\" class=\"validate invalid\" value=");
      out.print(student.getId());
      out.write(">\r\n");
      out.write("\t\t\t\t \t\t<label for=\"uid\" data-error=\"学号或密码错误\">学号</label>\r\n");
      out.write("\t\t\t\t \t\t");

				 		}
				 		else{
				 		
      out.write("\r\n");
      out.write("\t\t\t\t \t\t<input id=\"uid\" type=\"text\" name=\"id\" class=\"validate valid\" value=");
      out.print(student.getId());
      out.write(">\r\n");
      out.write("\t\t\t\t \t\t<label for=\"uid\" data-error=\"10位数字\">学号</label>\r\n");
      out.write("\t\t\t\t \t\t");

				 	}
				 		
      out.write("\r\n");
      out.write("\t\t\t\t \t\t</div>\r\n");
      out.write("\t\t\t \t</div>\r\n");
      out.write("\t\t\t \t<div class=\"row\">\r\n");
      out.write("\t\t\t\t \t<div class=\"input-field col s6 offset-s3\">\r\n");
      out.write("\t\t\t\t \t\t");

				 		if(student.errorCode == 102){  // 密码格式有错误
				 			
      out.write("\r\n");
      out.write("\t\t\t\t \t\t<input id=\"password\" name=\"password\" type=\"password\" class=\"validate invalid\" value=");
      out.print(student.getPassword());
      out.write(">\r\n");
      out.write("\t\t\t\t \t\t<label for=\"password\" data-error=\"6位数字或字母\">密码</label>\r\n");
      out.write("\t\t\t\t \t\t");
	
				 		}else{
				 		
      out.write("\r\n");
      out.write("\t\t\t\t \t\t<input id=\"password\" name=\"password\" type=\"password\" class=\"validate valid\" value=");
      out.print(student.getPassword());
      out.write(">\r\n");
      out.write("\t\t\t\t \t\t<label for=\"password\" data-error=\"6位数字或字母\">密码</label>\r\n");
      out.write("\t\t\t\t \t\t");

				 	}
				 	
      out.write("\r\n");
      out.write("\t\t\t\t \t</div>\r\n");
      out.write("\t\t\t \t</div>\r\n");
      out.write("\t\t\t \t<div class=\"row\">\r\n");
      out.write("\t\t\t \t\t<div class=\"col s12 center-align\">\r\n");
      out.write("\t\t\t \t\t\t<button class=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">登录</button>\r\n");
      out.write("\t\t\t \t\t\t<button class=\"btn blue waves-effect waves-light\" type=\"button\" onclick=\"window.location.href='register.htm'\">注册</button>\r\n");
      out.write("\r\n");
      out.write("\t\t\t \t\t</div>\r\n");
      out.write("\t\t\t \t\t\t\r\n");
      out.write("\t\t\t \t</div>\r\n");
      out.write("\t\t\t </form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
