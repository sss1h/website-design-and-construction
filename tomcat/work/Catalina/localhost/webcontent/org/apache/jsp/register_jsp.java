/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.65
 * Generated at: 2021-04-19 11:49:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.acring.util.DBHelper;
import com.acring.pojo.Student;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.acring.pojo.Student");
    _jspx_imports_classes.add("com.acring.util.DBHelper");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      com.acring.util.DBHelper myBean = null;
      synchronized (session) {
        myBean = (com.acring.util.DBHelper) _jspx_page_context.getAttribute("myBean", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (myBean == null){
          myBean = new com.acring.util.DBHelper();
          _jspx_page_context.setAttribute("myBean", myBean, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write('\r');
      out.write('\n');
      com.acring.pojo.Student myBean2 = null;
      synchronized (session) {
        myBean2 = (com.acring.pojo.Student) _jspx_page_context.getAttribute("myBean2", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (myBean2 == null){
          myBean2 = new com.acring.pojo.Student();
          _jspx_page_context.setAttribute("myBean2", myBean2, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<title></title>\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"./materialize/css/materialize.min.css\">\r\n");
      out.write("\t<script src=\"https://cdn.bootcss.com/jquery/3.2.1/jquery.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"./materialize/js/materialize.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");

	DBHelper dbHelper = new DBHelper();

	String id = request.getParameter("id");
	String password = request.getParameter("password");

	if(id == "" || id == null){
		
      out.write("\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t \t<div class=\"card-panel red lighten-2 center-align\">学号不能为空</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");

		response.setHeader("refresh", "2; URL=trylogin.jsp");
		return;
	}
	else if(password == "" || password == null){
		
      out.write("\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t \t<div class=\"card-panel red lighten-2 center-align\">密码不能为空</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");

		response.setHeader("refresh", "2; URL=trylogin.jsp");
		return;
	}

	Student student = new Student();
	if(dbHelper.getStudentById(id) != null){
	
      out.write("\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t \t<div class=\"card-panel red lighten-2 center-align\">用户已存在</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t");

	}
	else{
		student.setId(id);
		student.setPassword(password);

		if(dbHelper.insertStudent(student)){

		
      out.write("\r\n");
      out.write("\t\t\t<div class=\"container\">\r\n");
      out.write("\t\t \t<div class=\"card-panel teal lighten-2 center-align\">注册成功, 正在返回</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t");

		}else{
		
      out.write("\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t \t<div class=\"card-panel teal lighten-2 center-align\">注册失败, 正在返回</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t");

		}

	}
	response.setHeader("refresh", "2; URL=trylogin.jsp");


	
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
